// piece.h

// 多少種寶石
const int numPieces = 7;	
// 每種寶石有多少種旋轉結果
const int numRotations = 4;
// 每個寶石都有四個方塊，每個方塊都有 x 與 y 需要記錄，所以 2 * 4 = 8
const int numSpaces = 8;

// Game piece class
class Piece {

public:
	// 建立建構子
	Piece();
	Piece(int newPiece);

	// 寶石坐標，每個方塊最左上為標記
	int x;
	int y;

	// 設定顏色
	float redVal, greenVal, blueVal;

	// 選擇要哪一種寶石
	int type;

	// 每個寶石有四個旋轉後的結果
	int rotation;

	// 返回一個寶石
	const int* rotations();

	// 改變寶石狀態，相當於旋轉
	void rotatePiece(int dir);
};

// 設定所有寶石的形狀，使用坐標設定，因為最多四種旋轉方式，所以每一個寶石只有四種形態
// All pieces with each option of their rotation in the grid in the format {x0, y0, x1, y1, x2, y2, x3, y3}
const int gamePieces[numPieces][numRotations][numSpaces] =
{
	{
		{0, 0, 0, 1, 0, 2, 0, 3}, // 直條
		{0, 0, 1, 0, 2, 0, 3, 0},
		{0, 0, 0, 1, 0, 2, 0, 3},
		{0, 0, 1, 0, 2, 0, 3, 0},
	},
	{
		{0, 0, 1, 0, 0, 1, 1, 1}, // 正方形
		{0, 0, 1, 0, 0, 1, 1, 1},
		{0, 0, 1, 0, 0, 1, 1, 1},
		{0, 0, 1, 0, 0, 1, 1, 1},
	},
	{	{0, 0, 0, 1, 1, 1, 1, 2}, // Z字行
		{1, 0, 2, 0, 0, 1, 1, 1},
		{0, 0, 0, 1, 1, 1, 1, 2},
		{1, 0, 2, 0, 0, 1, 1, 1}
	},
	{	{1, 0, 0, 1, 1, 1, 0, 2}, // 反Z字形
		{0, 0, 1, 0, 1, 1, 2, 1},
		{1, 0, 0, 1, 1, 1, 0, 2},
		{0, 0, 1, 0, 1, 1, 2, 1}
	},
	{	{0, 0, 1, 0, 1, 1, 1, 2}, // L字形
		{0, 0, 1, 0, 2, 0, 0, 1},
		{0, 0, 0, 1, 0, 2, 1, 2},
		{2, 0, 0, 1, 1, 1, 2, 1}
	},
	{	{0, 0, 1, 0, 0, 1, 0, 2}, // 反L字形
		{0, 0, 0, 1, 1, 1, 2, 1},
		{1, 0, 1, 1, 0, 2, 1, 2},
		{0, 0, 1, 0, 2, 0, 2, 1}
	},
	{
		{0, 0, 0, 1, 1, 1, 0, 2}, // T字形
		{1, 0, 0, 1, 1, 1, 2, 1},
		{0, 1, 1, 0, 1, 1, 1, 2}, 
		{0, 0, 1, 0, 2, 0, 1, 1}
	},
};
